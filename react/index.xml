<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on DanaCoding</title>
    <link>https://danacoding.github.io/react/</link>
    <description>Recent content in React on DanaCoding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <copyright>&amp;copy;{year}, DanaCoding</copyright>
    <lastBuildDate>Tue, 28 Jan 2020 00:34:39 +0900</lastBuildDate>
    
        <atom:link href="https://danacoding.github.io/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>React &amp; Redux</title>
        <link>https://danacoding.github.io/react/redux/react-redux/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/redux/react-redux/</guid>
        <description>这两种技术的关键原则是什么? React 是提供数据的视图库，能以高效、可预测的方式渲染视图。 Redux 是状态管理框架，可用于简化 APP 应用状态的管理。 在 React Redux app 应用</description>
      </item>
      
      <item>
        <title>React 基础</title>
        <link>https://danacoding.github.io/react/react/react-base/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/react/react-base/</guid>
        <description>简介：React 是由 Facebook 创建和维护的开源视图库。 它是渲染现代 Web 应用程序用户界面（UI）的好工具。 一、JSX（JS 语法扩展） React 使用名为 JSX 的 JavaScript 语法</description>
      </item>
      
      <item>
        <title>React 最佳实践</title>
        <link>https://danacoding.github.io/react/react/react-bp/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/react/react-bp/</guid>
        <description>React 是一个声明式、高效且灵活的 JavaScript 库 一、特性 虚拟 DOM：保存在内存中并通过 ReactDOM 等库与“真实”DOM 同步的 UI 表示。使用这种方法，只有实际更改的组件才</description>
      </item>
      
      <item>
        <title>Redux</title>
        <link>https://danacoding.github.io/react/redux/redux-base/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/redux/redux-base/</guid>
        <description>Redux 是一个状态管理框架，可以与包括 React 在内的许多不同的 Web 技术一起使用。 在 Redux 中，有一个状态对象负责应用程序的整个状态， 这意味着如果你有一个包含十个</description>
      </item>
      
      <item>
        <title>Hooks 最佳实践</title>
        <link>https://danacoding.github.io/react/hooks/hooks-bp/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/hooks/hooks-bp/</guid>
        <description>Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。 Hook 是一些可以让你在函数组件里“钩入” React state 及生命周期等特性的函数。 Hook 使</description>
      </item>
      
      <item>
        <title>zustand</title>
        <link>https://danacoding.github.io/react/zustand/zustand-base/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/zustand/zustand-base/</guid>
        <description>zustand 基于 hooks 的 api，小型、快速且可扩展的状态管理解决方案。 一、安装 yarn add zustand 二、最简使用方法 Step1. 创建一个 Store store 是一个钩子！ 可以在里面放任何东西：原始数</description>
      </item>
      
      <item>
        <title>Recoil 最佳实践</title>
        <link>https://danacoding.github.io/react/recoil/recoil-bp/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/recoil/recoil-bp/</guid>
        <description>Recoil 是 React 官方 meta (facebook) 官方实验室的状态管理库，贴合 React hooks，自由度很高，所以要在项目中做一些规范，以便提供最佳的实践。 官方文档有对核心概念的解释</description>
      </item>
      
      <item>
        <title>Next</title>
        <link>https://danacoding.github.io/react/next/next-base/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/next/next-base/</guid>
        <description>Next.js 是围绕pages的概念构建的。 页面与基于其文件名的路由相关联。 一、创建 Next.js 应用 1 2 3 4 5 6 7 8 yarn create next-app --typescript yarn dev //开发模式 yarn build //生产构建 yarn start /</description>
      </item>
      
      <item>
        <title>Remix 基础</title>
        <link>https://danacoding.github.io/react/remix/remix-base/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/remix/remix-base/</guid>
        <description>一、创建 Remix 应用 npx create-remix@latest yarn dev 二、创建文件路由 app/root.tsx Layout 组件中 &amp;lt;li&amp;gt; &amp;lt;Link to=&amp;quot;/posts&amp;quot;&amp;gt;Posts&amp;lt;/Link&amp;gt; &amp;lt;/li&amp;gt; 创建 app/routes/posts/index.tsx export default function Posts() { return ( &amp;lt;div&amp;gt; &amp;lt;h1&amp;gt;Posts&amp;lt;/h1&amp;gt; &amp;lt;/div&amp;gt; ) } 三、加载数据 Remix 的路由文件相当于后端的模板视图，也是控制</description>
      </item>
      
      <item>
        <title>Remix 进阶</title>
        <link>https://danacoding.github.io/react/remix/remix-adv/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/remix/remix-adv/</guid>
        <description>一、创建 Remix 项目 npx create-remix@latest yarn yarn dev 二、目录结构 app/ - 所有Remix应用程序代码的位置 app/entry.client.tsx- JavaScript 的第一部分，它将在应用程序在浏览器中加载时运行。我们使用此文件来</description>
      </item>
      
      <item>
        <title>Storybook 基础</title>
        <link>https://danacoding.github.io/react/storybook/sb-base/</link>
        <pubDate>Tue, 28 Jan 2020 00:34:39 +0900</pubDate>
        
        <guid>https://danacoding.github.io/react/storybook/sb-base/</guid>
        <description>一、安装配置 在next.js项目中执行 npx sb init yarn storybook .storybook/preview.js 为 Storybook 配置 Next.js Images + import * as NextImage from &amp;quot;next/image&amp;quot;; + const OriginalNextImage = NextImage.default; + Object.defineProperty(NextImage, &amp;quot;default&amp;quot;, { configurable: true, value: (props) =&amp;gt; ( &amp;lt;OriginalNextImage {...props} unoptimized /&amp;gt; ), }); package.json 为 Storybook 提供 Next.js 公共目录 {</description>
      </item>
      
    
  </channel>
</rss>